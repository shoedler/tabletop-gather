{
  "name": "backend",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "prefix": "tabletop-gather",
  "sourceRoot": "apps/backend/src",
  "tags": [],
  "targets": {
    "deps": {
      "command": "apps/backend/mvnw dependency:resolve -f apps/backend/",
      "configurations": {
        "production": {
          "args": ["-Dspring.profiles.active=production"]
        },
        "development": {
          "args": ["-Dspring.profiles.active=development"]
        }
      }
    },
    "build": {
      "command": "apps/backend/mvnw clean package -DskipTests -Dfmt.skip -f apps/backend/",
      "dependsOn": ["deps"],
      "configurations": {
        "production": {
          "args": ["-Dspring.profiles.active=production"]
        },
        "development": {
          "args": ["-Dspring.profiles.active=development"]
        }
      }
    },
    "serve": {
      "command": "apps/backend/mvnw spring-boot:run -f apps/backend/",
      "dependsOn": ["build"],
      "configurations": {
        "production": {
          "args": ["-Dspring.profiles.active=production"]
        },
        "development": {
          "args": ["-Dspring.profiles.active=development"]
        }
      }
    },
    "lint": {
      "command": "apps/backend/mvnw com.spotify.fmt:fmt-maven-plugin:check -f apps/backend/",
      "configurations": {
        "production": {
          "args": ["-Dspring.profiles.active=production"]
        },
        "development": {
          "args": ["-Dspring.profiles.active=development"]
        }
      }
    },
    "test": {
      "command": "apps/backend/mvnw test -f apps/backend/",
      "dependsOn": ["build"],
      "configurations": {
        "production": {
          "args": ["-Dspring.profiles.active=production"]
        },
        "development": {
          "args": ["-Dspring.profiles.active=development"]
        }
      }
    },
    "docker-build": {
      "command": "docker build --tag tg-java-backend apps/backend"
    },
    "docker-serve": {
      "command": "docker compose -f ./apps/backend/docker-compose.yml up --no-build",
      "dependsOn": ["docker-build"]
    }
  }
}
